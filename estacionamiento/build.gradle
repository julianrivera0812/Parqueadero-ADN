buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
      		url "https://plugins.gradle.org/m2/"
    	}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("gradle.plugin.net.foragerr.jmeter:jmeter-gradle-plugin:1.0.10-3.3")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'net.foragerr.jmeter'

group = 'co.ceiba.adn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.mockito:mockito-all:1.10.19')
	testCompile('com.h2database:h2')
}

test {
	useJUnit {
       exclude '**/*IT.*'
       exclude '**/*FT.*'
    }
	jacoco {
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination =  file("jacoco/test-results/test")
}

task integrationTest(type: Test, description: 'Runs the integration tests', group: 'Verification') {
   useJUnit {
       include '**/*IT.*'
   }
   jacoco {
		append = false
		destinationFile = file("jacoco/jacocoIntegrationTest.exec")
	}
	reports.junitXml.destination =  file("jacoco/test-results/integrationTest")
}

jacocoTestReport.dependsOn(test, integrationTest)

jmeter {
	// jmTestFiles = [file("src/test/jmeter/serviceGetVehicleInParkingLT.jmx")] //if jmx file is not in the default location
	// jmSystemPropertiesFiles= [file("src/test/jmeter/jmeter.properties")] //to add additional system properties
	// enableReports = true
	// enableExtendedReports = false //produce Graphical and CSV reports
}